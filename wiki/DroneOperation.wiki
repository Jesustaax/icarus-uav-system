= Operation =

== Real Image Acquisition (for ANN Training) ==
 # Open a Terminal and Enter:
{{{
roscore
}}}
 # Open a Terminal and Enter:
{{{
rosrun ardrone_autonomy ardrone_driver
}}}
 # Open a Terminal and start the [http://wiki.ros.org/tum_ardrone/drone_stateestimation State Estimation Node]:
{{{
rosrun tum_ardrone drone_stateestimation
}}}
 # Open a Terminal and start the [http://wiki.ros.org/tum_ardrone/drone_autopilot Drone Autopilot Node]:
{{{
rosrun tum_ardrone drone_autopilot
}}}
 # Open a Terminal and start the Image Acquisition Process:
{{{
rosrun icarus_drone_server drone_server.py --targetmode=Acquire --target_acquire_class='classname'
}}}
Where 'classname' is the name of the class.
== Simulated Image Acquisition (for ANN Training) ==
{{{
python createtrainingimages.py --Patterns=50
}}}
== ANN Training ==
If Images were created using the "Real Image Acquisition Process":
{{{
python trainnets.py --TrainMode=Real
}}}
If Images were created using the "Simulated Image Acquisition Process":
{{{
python trainnets.py --TrainMode=Simulated
}}}
== Normal Operation ==
 # Open a Terminal and Enter:
{{{
roscore
}}}
 # Open a Terminal and Enter:
{{{
rosrun ardrone_autonomy ardrone_driver
}}}
 # Open a Terminal and start the [http://wiki.ros.org/tum_ardrone/drone_stateestimation State Estimation Node]:
{{{
rosrun tum_ardrone drone_stateestimation
}}}
 # Open a Terminal and start the [http://wiki.ros.org/tum_ardrone/drone_autopilot Drone Autopilot Node]:
{{{
rosrun tum_ardrone drone_autopilot
}}}
 # Open a Terminal and Enter:
{{{
rosrun tum_ardrone drone_gui
}}}
== Software-In-The-Loop Simulation =